% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapping_functions.R
\name{make_segmentation_filter}
\alias{make_segmentation_filter}
\alias{make_segmentation_filter.slice}
\alias{make_segmentation_filter.mouse}
\title{make_segmentation_filter (generic function)}
\usage{
make_segmentation_filter(x, ...)

\method{make_segmentation_filter}{slice}(
  s,
  channels = "eyfp",
  params = list(c("Vol..unit.", "Moment1", "Moment2", "Moment3", "Moment4", "Sigma")),
  ranges = list(list(c(200, 12000), c(3, 50), c(0, 600), c(0, 2000), c(0, 5), c(20,
    Inf)))
)

\method{make_segmentation_filter}{mouse}(
  m,
  slice_ID = NA,
  hemisphere = NULL,
  channels = c("eyfp"),
  params = list(c("Vol..unit.", "Moment1", "Moment2", "Moment3", "Moment4", "Sigma")),
  ranges = list(list(c(200, 12000), c(3, 50), c(0, 600), c(0, 2000), c(0, 5), c(20,
    Inf))),
  replace = FALSE
)
}
\arguments{
\item{x}{a mouse or slice object}

\item{...}{further arguments passed to or from other methods.}

\item{s}{slice object}

\item{channels}{(str vector, default = "eyfp") Channels to process. If NULL, defaults to the channels stored in the slice object attributes (not recommended).}

\item{params}{(list) Has same length as channels. Each element contains a vector of parameters names used for filtering that channel}

\item{ranges}{(list of lists) Has same length as channels. Each element of outer list corresponds the order of channels you want to process.
Inner list contains vectors of parameter ranges for that channel.}

\item{m}{mouse object}

\item{slice_ID}{(str) ID of slice}

\item{hemisphere}{'left', 'right' or NULL (both)}

\item{replace}{(bool, default = FALSE) replace existing filters.}
}
\value{
a mouse or slice object

s slice object. Vector of indices of cells to remove are stored as the channel filters in the slice object.

m mouse object.  Vector of indices of cells to remove are stored as the channel filters in the slice object within the mouse.
}
\description{
make_segmentation_filter (generic function)

Make a segmentation filter for a slice object

Make a segmentation filter for a slice within a mouse object
}
\examples{
s <- make_segmentation_filter(s, channels = c('eyfp'),
params = list(c("Vol..unit.","Moment1","Moment2","Moment3","Moment4","Sigma")),
ranges = list(list(c(200, 12000), c(3, 50), c(0, 600), c(0, 2000), c(0, 5), c(20, Inf))))
m <- make_segmentation_filter(m, slice_ID = '1_10', hemisphere = NULL , channels = c('eyfp'),
params = list(c("Vol..unit.","Moment1","Moment2","Moment3","Moment4","Sigma")),
ranges = list(list(c(200, 12000), c(3, 50), c(0, 600), c(0, 2000), c(0, 5), c(20, Inf))))
}
