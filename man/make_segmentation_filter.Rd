% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analysis_functions.R
\name{make_segmentation_filter.slice}
\alias{make_segmentation_filter.slice}
\alias{make_segmentation_filter.mouse}
\title{Make a segmentation filter for a slice object}
\usage{
\method{make_segmentation_filter}{slice}(
  s,
  channels = c("eyfp"),
  params = list(c("Vol..unit.", "Moment1", "Moment2", "Moment3", "Moment4", "Sigma")),
  ranges = list(list(c(200, 12000), c(3, 50), c(0, 600), c(0, 2000), c(0, 5), c(20,
    Inf)))
)

\method{make_segmentation_filter}{mouse}(
  m,
  slice_ID = "1_10",
  hemisphere = "left",
  channels = c("eyfp"),
  params = list(c("Vol..unit.", "Moment1", "Moment2", "Moment3", "Moment4", "Sigma")),
  ranges = list(list(c(200, 12000), c(3, 50), c(0, 600), c(0, 2000), c(0, 5), c(20,
    Inf)))
)
}
\arguments{
\item{channels}{: channels to process (str vector), "eyfp" and "cfos" are legal.}

\item{ranges}{(list of lists) Has same length as channels. Each element of outer list corresponds the order of channels you want to process.
Inner list contains vectors of parameter ranges for that channel.}

\item{m}{mouse object}

\item{slice_ID}{: ID of slice (str)}

\item{hemisphere}{'left', 'right' or NULL (both)}

\item{params:}{(list) Has same length as channels. Each element contains a vector of parameters names used for filtering that channel}
}
\value{


m mouse object
}
\description{
Make a segmentation filter for a slice object

Make a segmentation filter for a slice within a mouse object
}
\examples{
s <- make_segmentation_filter(s, channels = c('eyfp'),
params = list(c("Vol..unit.","Moment1","Moment2","Moment3","Moment4","Sigma")),
ranges = list(list(c(200, 12000), c(3, 50), c(0, 600), c(0, 2000), c(0, 5), c(20, Inf))))
m <- make_segmentation_filter(m, slice_ID = '1_10', hemisphere = NULL , channels = c('eyfp'),
params = list(c("Vol..unit.","Moment1","Moment2","Moment3","Moment4","Sigma")),
ranges = list(list(c(200, 12000), c(3, 50), c(0, 600), c(0, 2000), c(0, 5), c(20, Inf))))
}
