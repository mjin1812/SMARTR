% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapping_functions.R
\name{combine_cell_counts}
\alias{combine_cell_counts}
\title{Combine cell counts across all mice in an experiment into a single dataframe.}
\usage{
combine_cell_counts(e, by)
}
\arguments{
\item{e}{experiment object}

\item{by}{(str) names of the experiment attributes (categorical variables) that will be used to create analysis subgroups.}
}
\value{

}
\description{
This function also stores the mouse attribute names (not experiment attributes) as columns that will be used as categorical variables to make analysis subgroups.
The values of these attributes (\code{group}, \code{drug}, \code{age}) will automatically be converted to a string values for consistency.
}
\section{Channels}{
channels <- names(m$cell_table)
}

\section{Loop through all rois and get all subregions}{
regions <- c(rois)
for (roi in rois) {
regions <- c(regions, SMARTR::get.sub.structure(roi))
}
\subsection{Isolating counts from the hippocampus & sorting them by coordinate}{

dHipp_cell_table <- vector(mode = "list", length = length(channels))
vHipp_cell_table <- vector(mode = "list", length = length(channels))
names(dHipp_cell_table) <- channels
names(vHipp_cell_table) <- channels
}
}

\section{process each channel separately}{
hipp_AP_coordinates <- c()
for (channel in channels){\preformatted{# Get cell table of just the hippocampus
hipp_df <- m$cell_table[[channel]] \%>\% dplyr::filter(acronym \%in\% regions)

# Store dorsal counts if there are any, else erase
if (sum(hipp_df$AP > AP_coord) > 0)\{
  dHipp_cell_table[[channel]] <- hipp_df[hipp_df$AP > AP_coord, ]
\} else \{
  dHipp_cell_table[[channel]] <- NULL
\}

# Store ventral counts if there are any, else erase
if (sum(hipp_df$AP <= AP_coord) > 0)\{
  vHipp_cell_table[[channel]] <- hipp_df[hipp_df$AP <= AP_coord, ]
\} else \{
  vHipp_cell_table[[channel]] <- NULL
\}

# Keep track of the unique AP coordinate (slice identifier)
hipp_AP_coordinates <- c(hipp_AP_coordinates, hipp_df$AP) \%>\% unique()

# Remove existing hippocampus data from the normalized cell counts table if it exists
if (!is.null(m$normalized_counts) & merge)\{
  hipp_delete <- which(m$normalized_counts[[channel]]$acronym \%in\% regions)
  m$normalized_counts[[channel]] <- m$normalized_counts[[channel]][-hipp_delete,]

  message(paste0("Removed existing hippocampus data for ", channel,
                 " channel from the normalized counts dataframe"))
\}
}

}
}

\section{Get hippocampal areas}{
DV_volumes <- get_hipp_DV_volumes(m, AP_coord = AP_coord, rois = rois, hipp_AP_coordinates)
}

\section{Create combine cell_table and initialize list for normalized hippocampus cell counts}{
hipp_cell_tables <- list(dHipp_cell_table,vHipp_cell_table)
hipp_norm_counts <- vector(mode = "list", length = 2)
names(hipp_cell_tables) <- c("dorsal", "ventral")
names(hipp_norm_counts) <- c("dorsal", "ventral")
}

\section{Get normalized cell counts}{

}

\section{Whether to merge the information in each channel to the large normalized counts dataframe}{
if (merge){
# merged right.hemisphere check
if (is.null(m$normalized_counts[\link{1}]$right.hemisphere) && is.null(hipp_norm_counts[\link{1}][\link{1}]$right.hemisphere) ||
!is.null(m$normalized_counts[\link{1}]$right.hemisphere) && !is.null(hipp_norm_counts[\link{1}][\link{1}]$right.hemisphere)){\preformatted{  ## continue with merge
  for (dv in names(hipp_norm_counts))\{
    for (channel in channels)\{
      m$normalized_counts[[channel]] <- rbind(m$normalized_counts[[channel]], hipp_norm_counts[[dv]][[channel]]) \%>\% arrange(acronym)
    \}
  \}
  message("Merged into main normalized counts dataframe.")

\} else \{
  stop(paste0("If you want to merge the dorsal ventral split dataset into the main normalized counts dataframe, the \\n",
              "combine_hemispheres parameter needs to be identical when you run normalize_cell_counts() and split_hipp_DV()."))
\}
}

} else {
m$hipp_DV_normalized_counts <- hipp_norm_counts
message("Data is now stored in hipp_DV_normalized_counts dataframe. Future analysis of the hippocampus will be stored separately.\n")
}
)
return(m)
}
}

\examples{
e <- combine_cell_counts(e, by = c('groups', 'sex'))
}
