% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analysis_plotting_functions.R
\name{rewire_network}
\alias{rewire_network}
\title{Implement rewiring algorithms to current empirical networks to randomize certain network properties.}
\usage{
rewire_network(
  e,
  network_name,
  channels = "cfos",
  method = "ms",
  ontology = "allen",
  n_rewires = 10000,
  n_networks = 100,
  return_graphs = FALSE,
  seed = 5
)
}
\arguments{
\item{e}{experiment object}

\item{network_name}{(str) Name of the network}

\item{channels}{(str)  Vector of channels to process}

\item{method}{(str, default = "ms") "ms" implements Maslov-Sneppen rewiring approach (annuls all network properties except for network size, connection density, and degree distribution).}

\item{ontology}{(str, default = "allen") Region ontology to use. options = "allen" or "unified"}

\item{n_rewires}{(int, default = 10000) The number of rewires for randomization for "ms" rewiring implementation. Recommended to be the larger of either 10,000 or 10*No. edges in a graph.}

\item{n_networks}{(int, default = 100) The number of random networks to create}

\item{return_graphs}{(logical, default = FALSE) if TRUE, returns a list organized by channel containing a sublist, with each element containing a tidygraph object. This must be FALSE if you want to run
you want to summarize the null network statistics with \code{\link[=summarize_null_networks]{summarize_null_networks()}}}

\item{seed}{(int, default = 5) Random seed for future replication.}
}
\value{
Summary table of rewired network properties of all nodes showing the average of all randomized network properties generated.
}
\description{
Not that this keeps other characteristics constant (such as preserved degree sequence). These null networks can them be used to compare
against and normalize the empirical networks. Currently this essentially erases edge metrics and treats networks like binary graphs.
Edge weights are not used in calculating
network topology metrics.
}
\examples{
\dontrun{
summary_table <- rewire_network(e, network_name = "network1", channels = "cfos",
n_rewire =  igraph::gsize(e$networks$network1$cfos)*100, n_networks = 100)
}
}
