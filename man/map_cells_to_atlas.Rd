% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mapping_functions.R
\name{map_cells_to_atlas}
\alias{map_cells_to_atlas}
\alias{map_cells_to_atlas.slice}
\alias{map_cells_to_atlas.mouse}
\title{map_cells_to_atlas (generic function)}
\usage{
map_cells_to_atlas(x, ...)

\method{map_cells_to_atlas}{slice}(
  x,
  channels = NULL,
  clean = TRUE,
  display = TRUE,
  mouse_ID = NULL,
  ...
)

\method{map_cells_to_atlas}{mouse}(
  x,
  slice_ID = NA,
  hemisphere = NULL,
  channels = NULL,
  clean = TRUE,
  display = TRUE,
  replace = FALSE,
  ...
)
}
\arguments{
\item{x}{a mouse or slice object}

\item{...}{additional parameters besides 'registration', 'segmentation', 'forward.warps', and 'device' to pass to the \code{wholebrain::inspect.registration()} function}

\item{channels}{(str vector, default = NULL) Channels to process. If NULL, defaults to the channels stored in the slice object attributes.}

\item{clean}{(bool, default = TRUE). Remove cells that don't map to any regions.}

\item{display}{(bool, default = TRUE). Display the results of the forward warp for the slice.display}

\item{mouse_ID}{(str) mouse ID}

\item{slice_ID}{(str) ID of slice}

\item{hemisphere}{(str) 'left', 'right' or NULL (both)}

\item{replace}{(bool, default = FALSE). Replace current forward warped data, both raw and cleaned.}
}
\value{
a mouse or slice object

m mouse object
}
\description{
Method for forward warping segmentation data to atlas space for a slice object.
Requires segmentation objects to be made for channels specified and a registration object.

Method for forward warping segmentation data to atlas space for a slice within a mouse object.
Requires segmentation objects to be made for the channels specified and a registration.
}
\examples{
\dontrun{
s <- map_cells_to_atlas(s, channels c('cfos' , 'eyfp', 'colabel'),
clean = TRUE, display = TRUE, mouse_ID = "255")
}
\dontrun{
 m <- map_cells_to_atlas(m, slice_ID = "1_10", hemisphere = NULL,
 channels = c("cfos", "eyfp", "colabel"), clean = TRUE, replace = FALSE)
}
}
